{"version":3,"file":"static/js/19.cfa3dfc2.chunk.js","mappings":"qLAEaA,E,QAAUC,EAAAA,EAAH,qFAGT,SAAAC,GAAK,OAAIA,EAAMC,S,UCO1B,EAToB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASD,MAAAA,OAAT,MAAiB,UAAjB,SAClB,SAACH,EAAD,CAASG,MAAOA,EAAhB,SAAwBC,M,iLCFbC,EAAUJ,EAAAA,EAAAA,IAAH,mTAcPK,EAAOL,EAAAA,EAAAA,EAAH,wGAOJM,EAAON,EAAAA,EAAAA,KAAH,6DAKJO,EAAQP,EAAAA,EAAAA,MAAH,uGAOLQ,EAAQR,EAAAA,EAAAA,MAAH,ujBAkBLS,EAAYT,EAAAA,EAAAA,OAAH,8kBAqBTU,EAAUV,EAAAA,EAAAA,IAAH,qHAQPW,EAAeX,EAAAA,EAAAA,EAAH,mE,UCjEnBY,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAEJC,MAAM,qCACNC,SAAS,qCACZC,SAAUH,EAAAA,KAAaE,SAAS,uCAEjCA,WAEUE,EAAY,WACvB,OAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYR,GACtBS,KAAM,cANNC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OACbE,EAHF,EAGEA,aACAC,EAJF,EAIEA,MAMIC,GAAWC,EAAAA,EAAAA,MAOXC,EAAa,WAAO,IAAD,EACvB,OACE,iCACE,UAACtB,EAAD,oBAEE,SAACC,GAAD,QACEsB,KAAK,QACLC,KAAK,QACLC,YAAY,QACZjB,UAAQ,GACJO,EAAS,eAGjB,SAACX,EAAD,oBAAeY,EAAOT,aAAtB,aAAe,EAAcmB,cAK7BC,EAAgB,WAAO,IAAD,EAC1B,OACE,iCACE,UAAC3B,EAAD,uBAEE,SAACC,GAAD,QACEsB,KAAK,WACLC,KAAK,WACLC,YAAY,iBACZjB,UAAQ,GACJO,EAAS,kBAGjB,SAACX,EAAD,oBAAeY,EAAOP,gBAAtB,aAAe,EAAiBiB,cAKtC,OACE,UAAC7B,EAAD,YACE,SAACC,EAAD,iGAIA,UAACC,EAAD,CAAMyB,KAAK,aAAaI,SAAUV,GA/CrB,SAAAW,GACfT,EAASU,EAAAA,GAAAA,MAAqBD,IAC9BV,OA6CE,WACE,SAACG,EAAD,KACA,SAACK,EAAD,KACA,SAACzB,EAAD,CAAWqB,KAAK,SAAhB,yBAEF,UAACpB,EAAD,0BAEE,SAAC,KAAD,CAAS4B,GAAG,YAAZ,gC,UCzFKC,EAAY,WACvB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,YAE5B,OACE,gCACGF,IACC,SAACG,EAAA,EAAD,CACExC,KAAM,qCACND,MAAO,SAGX,SAACe,EAAD","sources":["components/HeadMessage/HeadMessage.styled.jsx","components/HeadMessage/HeadMessage.jsx","components/LogInForm/LogInForm.styled.jsx","components/LogInForm/LogInForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  margin: 0 0 16px 0;\n  text-align: center;\n  color: ${props => props.color};\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './HeadMessage.styled';\n\nconst HeadMessage = ({ text, color = 'inherit' }) => (\n  <Message color={color}>{text}</Message>\n);\n\nHeadMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n\nexport default HeadMessage;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  max-width: 600px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgba(60, 66, 87, 0.12) 0px 7px 14px 0px,\n    rgba(0, 0, 0, 0.12) 0px 3px 6px 0px;\n`;\n\nexport const Text = styled.p`\n  margin: 8px 0;\n  text-align: center;\n  font-size: 20px;\n  color: #121779;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 448px;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n  display: block;\n  color: #121779;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 28px;\n  padding: 8px 16px;\n  width: 100%;\n  min-height: 44px;\n  border: unset;\n  border-radius: 4px;\n  outline-color: rgb(84 105 212 / 0.5);\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(60, 66, 87, 0.16) 0px 0px 0px 1px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px;\n`;\n\nexport const SubmitBtn = styled.button`\n  background-color: #2878ad;\n  border: unset;\n  border-radius: 4px;\n  outline-color: rgb(84 105 212 / 0.5);\n  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0.12) 0px 1px 1px 0px, rgb(40, 120, 173) 0px 0px 0px 1px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(60, 66, 87, 0.08) 0px 2px 5px 0px;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  width: 100%;\n  min-height: 44px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #1565c0;\n  }\n`;\n\nexport const Flexbox = styled.nav`\n  margin: 8px 0;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: #121779;\n`;\n\nexport const ErrorMessage = styled.p`\n  margin: -10px 0 10px;\n  color: tomato;\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Wrapper,\n  Form,\n  Text,\n  Label,\n  Input,\n  SubmitBtn,\n  Flexbox,\n  ErrorMessage,\n} from './LogInForm.styled';\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .email('❌Email must be a valid email')\n      .required('❌ The field cannot be empty!'),\n    password: yup.string().required('❌ The field cannot be empty!'),\n  })\n  .required();\n\nexport const LogInForm = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onTouched',\n  });\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(authOperations.logIn(data));\n    reset();\n  };\n\n  const EmailInput = () => {\n    return (\n      <>\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n            {...register('email')}\n          />\n        </Label>\n        <ErrorMessage>{errors.email?.message}</ErrorMessage>\n      </>\n    );\n  };\n\n  const PasswordInput = () => {\n    return (\n      <>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            required\n            {...register('password')}\n          />\n        </Label>\n        <ErrorMessage>{errors.password?.message}</ErrorMessage>\n      </>\n    );\n  };\n\n  return (\n    <Wrapper>\n      <Text>\n        Accessing this application requires a login, please enter your\n        credentials below!\n      </Text>\n      <Form name=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n        <EmailInput />\n        <PasswordInput />\n        <SubmitBtn type=\"submit\">Sign In</SubmitBtn>\n      </Form>\n      <Flexbox>\n        No account?\n        <NavLink to=\"/register\">Create one!</NavLink>\n      </Flexbox>\n    </Wrapper>\n  );\n};\n","import { authSelectors } from 'redux/auth';\nimport { useSelector } from 'react-redux';\nimport { LogInForm } from 'components/LogInForm';\nimport HeadMessage from 'components/HeadMessage';\n\nexport const LoginPage = () => {\n  const isError = useSelector(authSelectors.getIsError);\n\n  return (\n    <>\n      {isError && (\n        <HeadMessage\n          text={'Something went wrong... Try again!'}\n          color={'red'}\n        />\n      )}\n      <LogInForm />\n    </>\n  );\n};\n"],"names":["Message","styled","props","color","text","Wrapper","Text","Form","Label","Input","SubmitBtn","Flexbox","ErrorMessage","schema","yup","email","required","password","LogInForm","useForm","resolver","yupResolver","mode","register","errors","formState","handleSubmit","reset","dispatch","useDispatch","EmailInput","type","name","placeholder","message","PasswordInput","onSubmit","data","authOperations","to","LoginPage","isError","useSelector","authSelectors","HeadMessage"],"sourceRoot":""}