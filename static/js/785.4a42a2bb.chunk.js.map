{"version":3,"file":"static/js/785.4a42a2bb.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookForm/PhonebookForm.jsx","utils/stringAvatar.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/HeadMessage/HeadMessage.styled.jsx","components/HeadMessage/HeadMessage.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.fieldset`\n  margin: 0 auto;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  max-width: 600px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgba(60, 66, 87, 0.12) 0px 7px 14px 0px,\n    rgba(0, 0, 0, 0.12) 0px 3px 6px 0px;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 448px;\n  padding: 8px 0;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n  display: block;\n  color: #121779;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 28px;\n  padding: 8px 16px;\n  width: 100%;\n  min-height: 44px;\n  border: unset;\n  border-radius: 4px;\n  outline-color: rgb(84 105 212 / 0.5);\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(60, 66, 87, 0.16) 0px 0px 0px 1px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px;\n`;\n\nexport const ErrorText = styled.p`\n  margin: -10px 0 10px;\n  color: tomato;\n`;\n\nexport const SubmitBtn = styled.button`\n  background-color: #2878ad;\n  border: unset;\n  border-radius: 4px;\n  outline-color: rgb(84 105 212 / 0.5);\n  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(0, 0, 0, 0.12) 0px 1px 1px 0px, rgb(40, 120, 173) 0px 0px 0px 1px,\n    rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n    rgba(60, 66, 87, 0.08) 0px 2px 5px 0px;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 600;\n  width: 100%;\n  min-height: 44px;\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    background-color: #cccccc;\n    opacity: 0.5;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contacts-slice';\nimport {\n  FormWrapper,\n  Form,\n  Label,\n  Input,\n  ErrorText,\n  SubmitBtn,\n} from './PhonebookForm.styled';\n\nfunction PhonebookForm({ closeModal, isOpenModal }) {\n  const [addItem] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const {\n    register,\n    reset,\n    formState: { errors, isValid },\n    handleSubmit,\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ name, number }) => {\n    if (contacts.some(contact => contact.name === name)) {\n      toast.error(`${name} is already in contacts`);\n    } else {\n      addItem({ name, number });\n      isOpenModal && closeModal();\n    }\n    reset();\n  };\n\n  return (\n    <FormWrapper>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            {...register('name', {\n              required: '❌ The field cannot be empty!',\n              pattern: {\n                value:\n                  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/gi,\n                message:\n                  \"❌ Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n              },\n              minLength: {\n                value: 2,\n                message: '❌ Name must contain 2 letters minimum',\n              },\n            })}\n          />\n        </Label>\n        <div>\n          {errors?.name && (\n            <ErrorText>\n              {errors?.name.message || 'An error has occurred...'}\n            </ErrorText>\n          )}\n        </div>\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            {...register('number', {\n              required: '❌ The field cannot be empty!',\n              pattern: {\n                value: /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s./0-9]*$/g,\n                message:\n                  '❌ Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n              },\n              minLength: {\n                value: 5,\n                message: '❌ Phone number must contain 5 digits minimum',\n              },\n            })}\n          />\n        </Label>\n        <div>\n          {errors?.number && (\n            <ErrorText>\n              {errors?.number.message || 'An error has occurred...'}\n            </ErrorText>\n          )}\n        </div>\n        <SubmitBtn type=\"submit\" disabled={!isValid}>\n          Add contact\n        </SubmitBtn>\n      </Form>\n    </FormWrapper>\n  );\n}\n\nPhonebookForm.propTypes = {\n  closeModal: PropTypes.func,\n  isOpenModal: PropTypes.bool,\n};\n\nexport default PhonebookForm;\n","function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n  };\n}\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n\n  padding: 0.5rem;\n\n  &:not(:last-of-type) {\n    margin-bottom: 0.25rem;\n  }\n\n  &:hover {\n    background-color: #f8fcfd;\n  }\n`;\n\nexport const ContactAvatarBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ContactText = styled.p`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { useDeleteContactMutation } from 'redux/contacts/contacts-slice';\nimport Avatar from '@mui/material/Avatar';\nimport { stringAvatar } from 'utils/stringAvatar';\nimport { ContactItem, ContactText, ContactAvatarBox } from './Contact.styled';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction Contact({ name, number, id }) {\n  const [deleteItem, { isLoading }] = useDeleteContactMutation();\n\n  const deleteContact = () => {\n    deleteItem(id);\n    toast.success('Selected contact deleted');\n  };\n\n  function verifyName(name) {\n    if (name.split(' ').length < 2) {\n      return `${name} ${name.split('').slice(1, 2).join()}`;\n    }\n    return name;\n  }\n\n  let verifiedName = verifyName(name);\n\n  return (\n    <ContactItem>\n      <ContactAvatarBox>\n        <Avatar {...stringAvatar(`${verifiedName}`)} />\n        <ContactText>\n          <b>{name}:</b> {number}\n        </ContactText>\n      </ContactAvatarBox>\n\n      <Button\n        variant=\"contained\"\n        startIcon={<DeleteIcon />}\n        sx={{ bgcolor: '#2878ad' }}\n        onClick={deleteContact}\n        disabled={isLoading}\n        type=\"submit\"\n      >\n        {isLoading ? 'Deleting...' : 'Delete'}\n      </Button>\n    </ContactItem>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const ContactList = styled.ul`\n  margin-top: 20px;\n  list-style: none;\n`;\n","export const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { ContactList } from './ContactsList.styled';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nfunction ContactsList({ contacts }) {\n  const filter = useSelector(getFilter);\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ContactList>\n      {filteredContacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, number }) => (\n          <Contact key={id} name={name} number={number} id={id} />\n        ))}\n    </ContactList>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin: 1rem 0;\n  padding-left: 12px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  flex-wrap: wrap;\n\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  margin-top: 0.5rem;\n  padding: 0.25rem;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filter-slice';\nimport { Label, Input } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const LoaderBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { LoaderBox } from './Loader.styled';\n\nfunction Loader({\n  config: { height = '24', width = '24', color = 'inherit' },\n}) {\n  return (\n    <LoaderBox>\n      <ThreeDots height={height} width={width} color={color} />\n    </LoaderBox>\n  );\n}\n\nLoader.propTypes = {\n  config: PropTypes.object,\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  margin: 0 0 16px 0;\n  text-align: center;\n  color: ${props => props.color};\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './HeadMessage.styled';\n\nconst HeadMessage = ({ text, color = 'inherit' }) => (\n  <Message color={color}>{text}</Message>\n);\n\nHeadMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n\nexport default HeadMessage;\n","import { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { useGetContactsQuery } from 'redux/contacts/contacts-slice';\nimport PhonebookForm from 'components/PhonebookForm';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport HeadMessage from 'components/HeadMessage';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\n\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 420,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const ContactsPage = () => {\n  const { data, error, isFetching } = useGetContactsQuery(null, {\n    refetchOnMountOrArgChange: true,\n  });\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const showContactsSection = contacts => (\n    <>\n      {contacts.length === 0 ? (\n        <>\n          <HeadMessage\n            text={'Your phonebook is empty. Add your first contact!'}\n            color={'red'}\n          />\n          <PhonebookForm />\n        </>\n      ) : (\n        <>\n          <Button onClick={handleOpen}>+ Add contact</Button>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"contact updating\"\n            aria-describedby=\"contact updating\"\n          >\n            <Box sx={modalStyle}>\n              <PhonebookForm closeModal={handleClose} isOpenModal={open} />\n            </Box>\n          </Modal>\n          {contacts.length > 1 ? <Filter /> : null}\n          <ContactsList contacts={contacts} />\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <div>\n      <div>\n        <Toaster />\n      </div>\n      {isFetching && <Loader config={{ height: '48', width: '48' }} />}\n      {data && showContactsSection(data)}\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n"],"names":["FormWrapper","styled","Form","Label","Input","ErrorText","SubmitBtn","closeModal","isOpenModal","useAddContactMutation","addItem","contacts","useGetContactsQuery","data","useForm","mode","register","reset","formState","errors","isValid","handleSubmit","autoComplete","onSubmit","name","number","some","contact","toast","type","required","pattern","value","message","minLength","disabled","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","sx","bgcolor","children","split","ContactItem","ContactAvatarBox","ContactText","id","useDeleteContactMutation","deleteItem","isLoading","verifiedName","join","verifyName","Avatar","Button","variant","startIcon","Delete","onClick","ContactList","getFilter","state","filter","normalizedFilter","useSelector","toLowerCase","filteredContacts","includes","sort","a","b","localeCompare","map","dispatch","useDispatch","onChange","e","changeFilter","currentTarget","LoaderBox","config","height","width","Message","props","text","modalStyle","position","top","left","transform","border","boxShadow","p","ContactsPage","refetchOnMountOrArgChange","error","isFetching","useState","open","setOpen","handleOpen","handleClose","Modal","onClose","Box"],"sourceRoot":""}